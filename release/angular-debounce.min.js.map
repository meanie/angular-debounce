{"version":3,"sources":["debounce.service.js"],"names":["angular","debounces","Map","fn","time","timeout","$timeout","cancel","delete","window"],"mappings":"iBAKAA,6FAa+CC,EAAA,IAAAC,WAGvCD,SAAmBE,EAAAC,OACrB,IAAMC,EAAAA,UAAUJ,OAAcE,EAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAC9BG,EAAAA,EAASC,GAAOF,UAAAA,GAIlB,GAAMA,EAAUC,IAAAA,GAAS,CACvBL,IAAAA,EAAUO,EAAOL,IAAAA,GACjBG,EAAOH,OAAAA,GAITF,IAAAA,EAAcE,EAAIE,iDAGlBD,UAIDK,EAAQA,IAAOT,EAAAA","file":"angular-debounce.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('Debounce.Service', [])\n\n/**\n * Service definition\n */\n.factory('$debounce', function($timeout) {\n\n  //Keep track of debounces\n  const debounces = new Map();\n\n  /**\n   * Debounce call\n   */\n  return function $debounce(fn, time, ...args) {\n\n    //Clear existing timeout\n    if (debounces.has(fn)) {\n      const timeout = debounces.get(fn);\n      $timeout.cancel(timeout);\n    }\n\n    //Start new one\n    const timeout = $timeout(() => {\n      debounces.delete(fn);\n      return fn(...args);\n    }, time);\n\n    //Save in debounces\n    debounces.set(fn, timeout);\n\n    //Return\n    return timeout;\n  };\n});\n\n})(window, window.angular);\n"]}